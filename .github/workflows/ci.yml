on:
  pull_request:
  push:
    branches: '*'
    tags: 'v*'

name: CI

jobs:

  codestyle:
    name: Codestyle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
          tools: cs2pr, composer:v2
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer update --no-ansi --no-interaction --no-progress
      - name: PHPCS
        run: vendor/bin/phpcs -s --report=checkstyle

  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          tools: composer:v2
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-php${{ matrix.php-version }}-${{ hashFiles('**/composer.json') }}
          restore-keys: composer-php${{ matrix.php-version }}
      - name: Install composer dependencies
        run: composer update --no-ansi --no-interaction --no-progress
      - name: Run phpunit with coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Create release
    runs-on: ubuntu-latest
    needs:
      - codestyle
      - tests
#     - jesus
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: json, mbstring, intl, apcu
          tools: composer:v2, phive
          ini-values: assert.exception=1, zend.assertions=1, apc.enabled=1, apc.enable_cli=1

      - name: Install composer dependencies
        run: composer update --no-ansi --no-interaction --no-progress --no-dev
      - name: Retrieve branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Install clue/phar-composer
        run: curl -JL -o phar-composer.phar https://clue.engineering/phar-composer-latest.phar
      - name: Compile phar
        run: php phar-composer.phar build
      - uses: actions/upload-artifact@v2
        with:
          name: ph-puml-${{ steps.branch_name.outputs.SOURCE_TAG }}.phar
          path: ph-puml.phar
          retention-days: 90
